

vue code snippets 만들기

https://www.youtube.com/watch?v=t4ESp_po6Wc


    "Vue Instance": {
        "prefix": "vuei",
        "body": [
            "new Vue({",
            "    /* edtmc^2w */",
            "    el: \"${1:}\",",
            "    data: {",
            "        /* 인스턴스 안에서 사용되는 변수 등록, 공유 변수 */",
            "        ",
            "    },",
            "    //template: ``,",
            "    methods: {",
            "        /* 이벤트 핸들러 등록 + 일반 함수 */",
            "        ",
            "    },",
            "    components: {",
            "        /* 전역 컴포넌트는 등록하지 않는다. */",
            "        /* 지역 컴포넌트나 파일 컴포넌트이면 등록해야 한다 . 예시) \"태그명\" : 컴포넌트명 */",
            "        ",
            "    }, ",
            "    computed: {",
            "        /* 자동처리 + 동기식. 메서드로 작성. return 필수. */",
            "        ",
            "    },",
            "    watch: {",
            "        /* 자동처리 + 비동기식. data 에 등록된 프로퍼티(변수) 모니터링. 메서드로 작성. 매개변수 필수. 외부 api 호출을 위해서 사용 */",
            "        ",
            "    },",
            "    mounted: function() {",
            "        console.log(\"mounted\");",
            "    },",
            "    updated: function() {",
            "        console.log(\"updated\");",
            "    },",
            "});",
            ""
        ],
        "description": "Vue Instance"
    },
    "Vue Component Gloabl": {
        "prefix": "vuegc",
        "body": [
            "Vue.component(\"${1:${TM_FILENAME_BASE}}\", { ",
            "    /* pdtmc^2w */",
            "    props: [] ,",
            "    data: function() {",
            "        /* 컴포넌트 안에서 사용되는 변수 등록. 개별 변수 */",
            "        return {",
            "            ",
            "        }",
            "    },",
            "    template: `",
            "        ",
            "    `,",
            "    methods: {",
            "        /* 이벤트 핸들러 등록 + 일반 함수 */",
            "        ",
            "    },",
            "    components: {",
            "        /* 전역 컴포넌트는 등록하지 않는다. */",
            "        /* 지역 컴포넌트나 파일 컴포넌트이면 등록해야 한다 . 예시) \"태그명\" : 컴포넌트명 */",
            "        ",
            "    },",
            "    computed: {",
            "        /* 자동처리 + 동기식. 메서드로 작성. return 필수. */",
            "        ",
            "    },",
            "    watch: {",
            "        /* 자동처리 + 비동기식. data 에 등록된 프로퍼티(변수) 모니터링. 메서드로 작성. 매개변수 필수. 외부 api 호출을 위해서 사용 */",
            "        ",
            "    },",
            "    mounted: function() {",
            "        console.log(\"mounted\");",
            "    },",
            "    updated: function() {",
            "        console.log(\"updated\");",
            "    },",
            "});",
            ""
        ],
        "description": "Vue Global Component"
    },
    "Vue Component Local": {
        "prefix": "vuelc",
        "body": [
            "var ${1:${TM_FILENAME_BASE}} = { ",
            "    /* pdtmc^2w */",
            "    props: [] ,",
            "    data: function() {",
            "        /* 컴포넌트 안에서 사용되는 변수 등록. 개별 변수 */",
            "        return {",
            "            ",
            "        }",
            "    },",
            "    template: `",
            "        ",
            "    `,",
            "    methods: {",
            "        /* 이벤트 핸들러 등록 + 일반 함수 */",
            "        ",
            "    },",
            "    components: {",
            "        /* 전역 컴포넌트는 등록하지 않는다. */",
            "        /* 지역 컴포넌트나 파일 컴포넌트이면 등록해야 한다 . 예시) \"태그명\" : 컴포넌트명 */",
            "        ",
            "    },",
            "    computed: {",
            "        /* 자동처리 + 동기식. 메서드로 작성. return 필수. */",
            "        ",
            "    },",
            "    watch: {",
            "        /* 자동처리 + 비동기식. data 에 등록된 프로퍼티(변수) 모니터링. 메서드로 작성. 매개변수 필수. 외부 api 호출을 위해서 사용  */",
            "        ",
            "    },",
            "    mounted: function() {",
            "        console.log(\"mounted\");",
            "    },",
            "    updated: function() {",
            "        console.log(\"updated\");",
            "    },",
            "};",
            ""
        ],
        "description": "Vue Local Component"
    },
    "Vue Single File Component": {
        "prefix": "vuefc",
        "body": [
            "<style scoped>",
            "    ",
            "</style>",
            "",
            "<template>",
            "    ",
            "</template>",
            "",
            "<s cript>",
            "    export default { ",
            "        /* pdtmc^2w */",
            "        props: [] ,",
            "        data: function() {",
            "           /* 컴포넌트 안에서 사용되는 변수 등록. 개별 변수 */",
            "            return {",
            "                ",
            "            }",
            "        },",
            "        //template: ``,",
            "        methods: {",
            "           /* 이벤트 핸들러 등록 + 일반 함수 */",
            "            ",
            "        },",
            "        components: {",
            "           /* 전역 컴포넌트는 등록하지 않는다. */",
            "           /* 지역 컴포넌트나 파일 컴포넌트이면 등록해야 한다 . 예시) \"태그명\" : 컴포넌트명 */",
            "            ",
            "        },",
            "        computed: {",
            "            /* 자동처리 + 동기식. 메서드로 작성. return 필수. */",
            "            ",
            "        },",
            "        watch: {",
            "            /* 자동처리 + 비동기식. data 에 등록된 프로퍼티(변수) 모니터링. 메서드로 작성. 매개변수 필수. 외부 api 호출을 위해서 사용 */",
            "            ",
            "        },",
            "        mounted: function() {",
            "            console.log(\"mounted\");",
            "        },",
            "        updated: function() {",
            "            console.log(\"updated\");",
            "        },",
            "    }",
            "</s cript>"
        ],
        "description": "Vue Single File Component"
    },
    "Vue plugin import": {
        "prefix": "vueplugin",
        "body": [
            "",
            "<!-- vue 플러그인 임포트   -->",
            "<s cript src=\"https://unpkg.com/vue@2.6.14/dist/vue.js\">/* vue 플러그인 임포트 */</script>",
            "<s cript src=\"https://unpkg.com/vuex@3.3.0/dist/vuex.js\"> /* vuex 플러그인 임포트 */</script>",
            "<s cript src=\"https://unpkg.com/vue-router@3.1.6/dist/vue-router.js\"> /* vue 라우터 플러그인 임포트 */</script>",
            "<s cript src=\"https://unpkg.com/axios/dist/axios.min.js\"> /* axios 플러그인 임포트 */</script>",
            "<s cript src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"> /* jQuery 플러그인 임포트 */</script>",
            "<s cript>",
            "    ",
            "</script>"
        ],
        "description": "Vue plugin import"
    },
    "Vuex Instance": {
        "prefix": "vuex",
        "body": [
            "// Vuex 인스턴스 만들기",
            "var store = new Vuex.Store({",
            "    actions: {",
            "        /* 왜 actions를 사용하나? 비동기로 외부 함수 호출하기 위해서",
            "         * actions 에는 메서드만 등록 가능하다.",
            "         * 첫번째인자: 무조건 mutations로 고정.",
            "         * 두번째인자: 값. store.dispatch()호출시 넘겨지는 값.",
            "         */",
            "        set: function( mutations/* 고정 */, param ){",
            "            mutations.commit(\"set\", param );",
            "        },",
            "    },",
            "    mutations: {",
            "        /* 왜 mutations 를 사용하나? state 를 바꾸기 위해서",
            "         * mutations 에는 메서드만 등록 가능하다.",
            "         * 첫번째인자: 무조건 state 로 고정.",
            "         * 두번째인자: 값. mutations.commit() 호출시 넘겨지는 값.",
            "         * */",
            "        set: function(state/* 고정 */, param/* mutations.commit 호출시 넘겨지는 값 */){",
            "            state.인자 = param;",
            "        },",
            "    },",
            "    state: {",
            "        /* vue인스턴스나 컴포넌트의 data 프로퍼티에 해당 */",
            "        인자: \"STORE STATE\",",
            "    },",
            "    getters: {",
            "        /* state 변경 정보를 컴포넌트에 전달하는 역활.",
            "         * 메서드로 만들어야 하며 메서드명은 state 의 이름을 그대로 사용",
            "         * 첫번째인자: 무조건 state",
            "         * 컴포넌트에서는 computed를 사용하여 store의 state 변경 정보를 자동으로 가져오게 된다.",
            "         * 예시) message()=> store.getters.인자;",
            "         */",
            "         인자: function(state/* 고정 */){",
            "            return state.인자;",
            "        },",
            "    },",
            "});",
            ""
        ],
        "description": "Vue Instance"
    },
    "Axios": {
        "prefix": "axios",
        "body": [
            "// import axios from \"axios\";",
            "",
            "axios({",
            "    url: \"item\",  // 호출되는 서버 주소.",
            "    method: \"get\",       // request method: get, post, delete, put",
            "    params: { },  // 서버로 보내는 데이터. 예시) { data1:\"test1\", data2:\"test2\" } ",
            "    timeout: 30000,    // 최대 대기 시간: 30초. 30초 이상이 되면 fail 부분이 실행됨.",
            "    responseType: \"json\",  // response로 넘어오는 데이터 형태: text, html, xml, json, jsonp, script",
            "})",
            ".then( (res) => {",
            "    console.log(res.data);",
            "    this.message1 = res.data;",
            "})",
            ".catch((error) => {",
            "    console.log(error);",
            "});"
        ],
        "description": "React script"
    },